#
## Memory access checks
#
#valgrind --leak-check=yes --track-origins=yes --suppressions=/home/david/projects/luxcorerender/LuxCore/tests/valgrind.suppress --gen-suppressions=yes ~/projects/luxcorerender/LuxCore/bin/luxcoreui -D opencl.devices.select 010 -D renderengine.type PATHCPU -D sampler.type SOBOL -D native.threads.count 1 -D opencl.native.threads.count 0 scenes/luxball/luxball-hdr.cfg
#
#valgrind --leak-check=yes --track-origins=yes --suppressions=/home/david/projects/luxcorerender/LuxCore/tests/valgrind.suppress --gen-suppressions=yes ~/projects/luxcorerender/LuxCore/bin/luxcoreconsole -D opencl.devices.select 010 -D renderengine.type PATHCPU -D sampler.type SOBOL -D native.threads.count 1 -D opencl.native.threads.count 0 -D batch.haltspp 1 scenes/luxball/luxball-hdr.cfg
#
#valgrind --leak-check=yes --track-origins=yes --suppressions=/home/david/projects/luxcorerender/LuxCore/tests/valgrind.suppress --gen-suppressions=yes  python3 unittests.py
#
# Use "--track-origins=yes" to track origin of uninitialised values
#
## Memory allocation
#
#valgrind --tool=massif ~/projects/luxcorerender/LuxCore/bin/luxcoreconsole -D opencl.devices.select 010 -D renderengine.type PATHCPU -D sampler.type SOBOL -D native.threads.count 12 -D batch.haltspp 1 -w 2048 -e 2048 scenes/cornell/cornell.cfg
#

################################################################################
# System libs
################################################################################

{
	ignore_unversioned_libs
	Memcheck:Leak
	...
	obj:*/lib*/lib*.so
}
{
	ignore_versioned_libs
	Memcheck:Leak
	...
	obj:*/lib*/lib*.so.*
}

################################################################################
# OpenCL
################################################################################

{
   libamdocl64_cond
   Memcheck:Cond
   ...
   obj:*/libamdocl64.so
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_param_ioctl
   Memcheck:Param
   ioctl(generic)
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_param_writebuf
   Memcheck:Param
   write(buf)
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_cond_rindex
   Memcheck:Cond
   fun:rindex
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_value8
   Memcheck:Value8
   obj:*/libamdocl64.so
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_value8_rindex
   Memcheck:Value8
   fun:rindex
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_value8_strlen
   Memcheck:Value8
   fun:strlen
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_leak_possible
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   obj:*/libamdocl64.so
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_leak_definite
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   obj:*/libamdocl64.so
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_leak_definite_ati
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   obj:*/libatiadlxx.so
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_leak_reachable
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   obj:*/libamdocl64.so
   ...
   obj:*/libamdocl64.so
}
{
   libamdocl64_leak_reachable
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   obj:*/libamdocl64.so
   ...
   obj:*/libamdocl64.so
}

{
   libamdocl64_addr2
   Memcheck:Addr2
   ...
   obj:*/libamdocl64.so
   ...
}

{
   libamdocl64_addr8
   Memcheck:Addr8
   ...
   obj:*/libamdocl64.so
   ...
}

{
   libamdocl-orca64_cond1
   Memcheck:Cond
   ...
   obj:*/libamdocl-orca64.so
   ...
}

################################################################################
# AMD fglrx
################################################################################

{
	fglrx1
	Memcheck:Param
	ioctl(generic)
	fun:ioctl
	...
	obj:*/fglrx_dri.so
	...
}

{
	fglrx2
	Memcheck:Cond
	...
	obj:*/fglrx_dri.so
	...
}

{
	fglrx3
	Memcheck:Addr1
	...
	obj:*/fglrx_dri.so
	...
}

{
	fglrx4
	Memcheck:Addr2
	...
	obj:*/fglrx_dri.so
	...
}

{
	fglrx5
	Memcheck:Addr4
	...
	obj:*/fglrx_dri.so
	...
}

{
	fglrx6
	Memcheck:Addr8
	...
	obj:*/fglrx_dri.so
	...
}

{
	fglrx7
	Memcheck:Leak
	match-leak-kinds: possible
	...
	obj:*/fglrx_dri.so
	...
}

{
	fglrx8
	Memcheck:Leak
	match-leak-kinds: definite
	...
	obj:*/fglrx_dri.so
	...
}

################################################################################
# GLFW
################################################################################

{
	glfwInit1
	Memcheck:Cond
	...
	fun:glfwInit
	...
}

################################################################################
# Python
################################################################################

{
	python1
	Memcheck:Addr4
	...
	obj:/usr/bin/python3.4
	...
}

{
	python2
	Memcheck:Cond
	...
	obj:/usr/bin/python3.4
	...
}

{
	python3
	Memcheck:Value8
	...
	obj:/usr/bin/python3.4
	...
}

{
	python4
	Memcheck:Leak
	match-leak-kinds: possible
	...
	obj:/usr/bin/python3.4
	...
}

################################################################################
# Embree
################################################################################

{
   embree1
   Memcheck:Addr16
   fun:__intel_sse2_strrchr
   fun:init_ap_data
   fun:_ZN52_INTERNAL_30_______src_tbb_dynamic_link_cpp_f0e9376a3tbb8internal12init_dl_dataEv
   fun:run_initializer
   fun:atomic_do_once
   fun:atomic_once
   fun:_ZN3tbb8internal22init_dynamic_link_dataEv
   fun:call_init.part.0
   fun:call_init
   fun:_dl_init
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
}

################################################################################
# LuxCore
################################################################################

{
	NamedObject_GetUniqueName1
	Memcheck:Cond
	...
	fun:_ZN7luxrays11NamedObject13GetUniqueNameERKSs
	...
}
{
	NamedObject_GetUniqueName2
	Memcheck:Value8
	...
	fun:_ZN7luxrays11NamedObject13GetUniqueNameERKSs
	...
}
{
	NamedObject_GetUniqueName3
	Memcheck:Cond
	...
	fun:_ZN7luxrays11NamedObject13GetUniqueNameERKSs
	...
}
{
   SafeSave_sha1_random_digest
   Memcheck:Cond
   ...
   fun:_ZN7luxrays8SafeSaveC1ERKSs
   ...
}
